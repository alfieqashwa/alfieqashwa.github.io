---
import { getCollection } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
const pageTitle = "Blog";
const allPosts = await getCollection("blog");
---

<BaseLayout pageTitle={pageTitle}>
  <div class="mx-auto max-w-4xl px-4">
    <!-- Header -->
    <div class="mb-6 sm:mb-8">
      <h1 class="text-2xl sm:text-3xl font-bold mb-4">Blog</h1>
      <p class="text-sm sm:text-base text-muted-foreground">
        Thoughts, tutorials, and discoveries from my journey in software development.
      </p>
    </div>
    
    <!-- Posts Grid -->
    <div class="grid gap-4 sm:gap-6 md:grid-cols-2 lg:grid-cols-3">
      {
        allPosts.map((post) => (
          <article class="bg-muted border rounded-lg p-4 sm:p-6 hover:bg-accent transition-colors">
            <a href={`/posts/${post.id}`} class="block space-y-2 sm:space-y-3">
              <!-- Date -->
              {post.data.pubDate && (
                <time class="text-xs sm:text-sm text-muted-foreground" datetime={post.data.pubDate.toISOString()}>
                  {post.data.pubDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
              )}
              
              <!-- Title -->
              <h2 class="text-lg sm:text-xl font-semibold leading-tight hover:text-primary transition-colors">
                {post.data.title}
              </h2>
              
              <!-- Description -->
              {post.data.description && (
                <p class="text-xs sm:text-sm text-muted-foreground line-clamp-2 sm:line-clamp-3">
                  {post.data.description}
                </p>
              )}
              
              <!-- Tags -->
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-1 sm:gap-2">
                  {post.data.tags.slice(0, 2).map((tag: string) => (
                    <span class="inline-flex items-center px-2 py-1 text-xs bg-primary/10 text-primary rounded">
                      {tag}
                    </span>
                  ))}
                  {post.data.tags.length > 2 && (
                    <span class="text-xs text-muted-foreground px-1">+{post.data.tags.length - 2} more</span>
                  )}
                </div>
              )}
              
              <!-- Read More -->
              <div class="flex items-center text-xs sm:text-sm text-primary pt-1">
                <span>Read more</span>
                <svg width="14" height="14" class="ml-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M13 5h6v6m0-6L5 19"/>
                </svg>
              </div>
            </a>
          </article>
        ))
      }
    </div>
    
    <!-- Empty State -->
    {allPosts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-muted-foreground mb-4">No blog posts yet.</p>
        <p class="text-sm text-muted-foreground">Check back soon for new content!</p>
      </div>
    )}
  </div>
</BaseLayout>
