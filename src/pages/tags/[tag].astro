---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
    const allPosts = await getCollection("blog");
    const uniqueTags = [...new Set(allPosts.map((post: any) => post.data.tags).flat())]

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post:any)=> post.data.tags?.includes(tag))
        return {
            params: { tag },
            props: { posts: filteredPosts }
        }
    })
}
const { tag } = Astro.params;
const {posts} = Astro.props;
---

<BaseLayout pageTitle={`Posts tagged with "${tag}"`}>
  <div class="mx-auto max-w-4xl px-4">
    <!-- Header -->
    <div class="mb-12">
      <div class="flex items-center gap-4 mb-4">
        <a 
          href="/tags" 
          class="inline-flex items-center gap-2 text-sm text-muted-foreground hover:text-foreground transition-colors"
        >
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M19 12H5m7-7l-7 7 7 7"/>
          </svg>
          Back to Tags
        </a>
      </div>
      
      <div class="flex items-center gap-4 mb-6">
        <div class="flex items-center gap-3">
          <div class="w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"/>
              <line x1="7" y1="7" x2="7.01" y2="7"/>
            </svg>
          </div>
          <div>
            <h1 class="text-4xl font-bold capitalize">{tag}</h1>
            <p class="text-muted-foreground">
              {posts.length} {posts.length === 1 ? 'post' : 'posts'} found
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Posts Grid -->
    <div class="space-y-8">
      {
        posts.map((post) => (
          <article class="bg-muted border rounded-lg overflow-hidden hover:bg-accent/50 transition-colors group">
            <div class="p-6">
              <div class="flex items-start justify-between mb-4">
                <div class="flex-1">
                  <!-- Date -->
                  {post.data.pubDate && (
                    <time class="text-sm text-muted-foreground" datetime={post.data.pubDate.toISOString()}>
                      {post.data.pubDate.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                  )}
                  
                  <!-- Title -->
                  <h2 class="text-xl font-semibold mt-2 mb-3 group-hover:text-primary transition-colors">
                    <a href={`/posts/${post.id}`} class="hover:underline">
                      {post.data.title}
                    </a>
                  </h2>
                  
                  <!-- Description -->
                  {post.data.description && (
                    <p class="text-muted-foreground text-sm leading-relaxed mb-4">
                      {post.data.description}
                    </p>
                  )}
                  
                  <!-- Tags -->
                  {post.data.tags && post.data.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2 mb-4">
                      {post.data.tags.map((postTag: string) => (
                        <a 
                          href={`/tags/${postTag}`}
                          class={`inline-flex items-center px-2 py-1 text-xs rounded ${
                            postTag === tag 
                              ? 'bg-primary text-primary-foreground' 
                              : 'bg-primary/10 text-primary hover:bg-primary/20'
                          } transition-colors`}
                        >
                          {postTag}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
                
                <!-- Arrow Icon -->
                <div class="text-muted-foreground group-hover:text-primary transition-colors ml-4">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M13 5h6v6m0-6L5 19"/>
                  </svg>
                </div>
              </div>
              
              <!-- Read More Link -->
              <a 
                href={`/posts/${post.id}`} 
                class="inline-flex items-center gap-2 text-sm text-primary hover:underline font-medium"
              >
                Read full post
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M13 5h6v6m0-6L5 19"/>
                </svg>
              </a>
            </div>
          </article>
        ))
      }
    </div>

    <!-- Empty State -->
    {posts.length === 0 && (
      <div class="text-center py-12">
        <div class="w-16 h-16 bg-muted rounded-full flex items-center justify-center mx-auto mb-4">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"/>
            <path d="M21 21l-4.35-4.35"/>
          </svg>
        </div>
        <h3 class="text-lg font-semibold mb-2">No posts found</h3>
        <p class="text-muted-foreground mb-6">There are no posts tagged with "{tag}" yet.</p>
        <a 
          href="/blog" 
          class="inline-flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors"
        >
          Browse All Posts
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M13 5h6v6m0-6L5 19"/>
          </svg>
        </a>
      </div>
    )}

    <!-- Related Tags -->
    {posts.length > 0 && (
      <div class="mt-16 bg-muted border rounded-lg p-6">
        <h3 class="text-lg font-semibold mb-4">Related Tags</h3>
        <div class="flex flex-wrap gap-2">
          {[...new Set(posts.flatMap(post => post.data.tags || []))]
            .filter(relatedTag => relatedTag !== tag)
            .slice(0, 8)
            .map((relatedTag) => (
              <a 
                href={`/tags/${relatedTag}`}
                class="inline-flex items-center px-3 py-1.5 text-sm bg-background border rounded-full hover:bg-accent hover:border-primary/50 transition-all"
              >
                {relatedTag}
              </a>
            ))
          }
        </div>
      </div>
    )}
  </div>
</BaseLayout>
